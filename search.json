[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 klassets authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Quasi-Anscombe-data-sets.html","id":"the-original-set-type-1","dir":"Articles","previous_headings":"","what":"The original set (Type 1)","title":"Quasi Anscombe data sets","text":"","code":"df <- sim_quasianscombe_set_1(beta0 = 10, beta1 = 2, error_sd = 0.1)  plot(df) +   xlim(0, NA) +   ylim(0, NA)"},{"path":"/articles/Quasi-Anscombe-data-sets.html","id":"set-3-outliers","dir":"Articles","previous_headings":"","what":"Set 3: Outliers","title":"Quasi Anscombe data sets","text":"","code":"df3_1 <- sim_quasianscombe_set_3(df)"},{"path":"/articles/Quasi-Anscombe-data-sets.html","id":"set-4-cluster","dir":"Articles","previous_headings":"","what":"Set 4: Cluster","title":"Quasi Anscombe data sets","text":"","code":"df4_1 <- sim_quasianscombe_set_4(df)  df4_2 <- sim_quasianscombe_set_4(df, rescale_to = c(0, .1), prop = 0.5)"},{"path":"/articles/Quasi-Anscombe-data-sets.html","id":"compare-results","dir":"Articles","previous_headings":"","what":"Compare results","title":"Quasi Anscombe data sets","text":"","code":"dfs <- list(   \"Original\" = df,   \"Set 3\" = df3_1,   \"Set 4 v1\" = df4_1,   \"Set 4 v2\" = df4_2 )  dfs <- dfs |>    tibble::enframe(name = \"set\") |>    tidyr::unnest() #> Warning: `cols` is now required when using unnest(). #> Please use `cols = c(value)`  dfs #> # A tibble: 400 × 3 #>    set          x     y #>    <chr>    <dbl> <dbl> #>  1 Original  2.65  15.4 #>  2 Original  2.82  15.6 #>  3 Original  3.19  16.4 #>  4 Original  3.37  16.7 #>  5 Original  3.55  17.0 #>  6 Original  3.61  17.2 #>  7 Original  3.63  17.2 #>  8 Original  3.66  17.3 #>  9 Original  3.75  17.5 #> 10 Original  3.79  17.6 #> # … with 390 more rows  ggplot(dfs, aes(x, y)) +   geom_point(shape = 21, fill = \"gray80\", color = \"gray60\") +   geom_smooth(method = \"lm\", se = FALSE) +   facet_wrap(vars(set)) +    xlim(0, NA) +   ylim(0, NA)  #> `geom_smooth()` using formula 'y ~ x' df_mods <- dfs |>    dplyr::group_nest(set) |>    dplyr::mutate(     model = map(data, lm, formula = y ~ x),     value = map(model, coefficients),     coef  = map(value, names)     )   df_mods |>    dplyr::select(-data, -model) |>    tidyr::unnest(cols = c(value, coef)) |>    tidyr::pivot_wider(names_from = coef, values_from = value) #> # A tibble: 4 × 3 #>   set      `(Intercept)`     x #>   <chr>            <dbl> <dbl> #> 1 Original          10.0  2.00 #> 2 Set 3             10.0  2.00 #> 3 Set 4 v1          10.0  2.00 #> 4 Set 4 v2          10.0  2.00"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua Kunst. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kunst J (2022). klassets: Tools simulate data set teach Statical Models ML Algorithms. https://jkunst.com/klassets/, https://github.com/jbkunst/klassets.","code":"@Manual{,   title = {klassets: Tools to simulate data set to teach Statical Models and ML Algorithms},   author = {Joshua Kunst},   year = {2022},   note = {https://jkunst.com/klassets/, https://github.com/jbkunst/klassets}, }"},{"path":"/index.html","id":"klassets","dir":"","previous_headings":"","what":"Tools to simulate data set to teach Statical Models and ML Algorithms","title":"Tools to simulate data set to teach Statical Models and ML Algorithms","text":"goal klasset …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to simulate data set to teach Statical Models and ML Algorithms","text":"can install development version klasset GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jbkunst/klasset\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools to simulate data set to teach Statical Models and ML Algorithms","text":"basic example shows solve common problem:","code":"library(klasset) ## basic example code"},{"path":"/reference/sim_quasianscombe_set_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate quasi Anscombe data sets Type 1 — sim_quasianscombe_set_1","title":"Generate quasi Anscombe data sets Type 1 — sim_quasianscombe_set_1","text":"function generate data frame creating first x random vector apply linear transformation using beta0 beta1 finally adding normal distributed noise using error_sd creating y values.","code":""},{"path":"/reference/sim_quasianscombe_set_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate quasi Anscombe data sets Type 1 — sim_quasianscombe_set_1","text":"","code":"sim_quasianscombe_set_1(   n = 100,   beta0 = 3,   beta1 = 0.5,   error_sd = 0.1,   x_mean = 5,   x_sd = 1,   x_dist = \"norm\",   seed = 1234 )"},{"path":"/reference/sim_quasianscombe_set_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate quasi Anscombe data sets Type 1 — sim_quasianscombe_set_1","text":"n n, default value: 100 beta0 beta0, default value: 3, beta1 beta1, default value: 0.5 error_sd error_sd, default value: 0.1 x_mean x_mean, default value: 5 x_sd x_sd, default value: 1 x_dist x_dist, default value: \"norm\" seed seed, default value: 1234","code":""},{"path":"/reference/sim_quasianscombe_set_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate quasi Anscombe data sets Type 1 — sim_quasianscombe_set_1","text":"","code":"df <- sim_quasianscombe_set_1()  df #> # A tibble: 100 × 2 #>        x     y #>    <dbl> <dbl> #>  1  2.65  4.37 #>  2  2.82  4.36 #>  3  3.19  4.60 #>  4  3.37  4.64 #>  5  3.55  4.69 #>  6  3.61  4.82 #>  7  3.63  4.72 #>  8  3.66  4.85 #>  9  3.75  4.91 #> 10  3.79  4.89 #> # … with 90 more rows  plot(df)   # Some particular cases  plot(sim_quasianscombe_set_1(x_mean = 0))   plot(sim_quasianscombe_set_1(x_sd = 0))   plot(sim_quasianscombe_set_1(error_sd = 0))   plot(sim_quasianscombe_set_1(x_mean = 0, x_sd = 0))"},{"path":"/reference/sim_quasianscombe_set_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate quasi Anscombe data sets Type 3 — sim_quasianscombe_set_3","title":"Generate quasi Anscombe data sets Type 3 — sim_quasianscombe_set_3","text":"Data sets Type 3 get outliers conserving $x$ mean coefficients -different significance- adjusted linear model.","code":""},{"path":"/reference/sim_quasianscombe_set_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate quasi Anscombe data sets Type 3 — sim_quasianscombe_set_3","text":"","code":"sim_quasianscombe_set_3(   df,   prop = 0.05,   beta1_factor = 0.5,   residual_factor = 0.25 )"},{"path":"/reference/sim_quasianscombe_set_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate quasi Anscombe data sets Type 3 — sim_quasianscombe_set_3","text":"df data frame sim_quasianscombe_set_1 (similar). prop proportion value modify outliers. beta1_factor Numeric value modify beta1 value. residual_factor Numeric value multiply residual modify variance.","code":""},{"path":"/reference/sim_quasianscombe_set_3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate quasi Anscombe data sets Type 3 — sim_quasianscombe_set_3","text":"function : Calculate linear regression model calculate new trend using 0.5 times beta1 Take prop% values greater 2*prop x values modify related y value get original estimation beta1 Apply residual_factor factor residual get minor variance better visual impresion outlier effect.","code":""},{"path":"/reference/sim_quasianscombe_set_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate quasi Anscombe data sets Type 3 — sim_quasianscombe_set_3","text":"","code":"df <- sim_quasianscombe_set_1()  dataset3 <- sim_quasianscombe_set_3(df)  dataset3 #> # A tibble: 100 × 2 #>        x     y #>    <dbl> <dbl> #>  1  2.65  4.76 #>  2  2.82  4.78 #>  3  3.19  4.88 #>  4  3.37  4.91 #>  5  3.55  4.95 #>  6  3.61  4.99 #>  7  3.63  4.97 #>  8  3.66  5.00 #>  9  3.75  5.03 #> 10  3.79  5.03 #> # … with 90 more rows  # plot(df)  plot(dataset3)   plot(sim_quasianscombe_set_3(df, prop = 0.1, residual_factor = 0))"},{"path":"/reference/sim_quasianscombe_set_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate quasi Anscombe data sets Type 4 — sim_quasianscombe_set_4","title":"Generate quasi Anscombe data sets Type 4 — sim_quasianscombe_set_4","text":"Data sets Type 4 recreate two cluster keeping coefficient original regression model.","code":""},{"path":"/reference/sim_quasianscombe_set_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate quasi Anscombe data sets Type 4 — sim_quasianscombe_set_4","text":"","code":"sim_quasianscombe_set_4(df, rescale_to = c(0.1, 0.2), prop = 0.15)"},{"path":"/reference/sim_quasianscombe_set_4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate quasi Anscombe data sets Type 4 — sim_quasianscombe_set_4","text":"df data frame sim_quasianscombe_set_1 (similar). rescale_to Rescale x value create second cluster. prop proportion value modify second group/cluster.","code":""},{"path":"/reference/sim_quasianscombe_set_4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate quasi Anscombe data sets Type 4 — sim_quasianscombe_set_4","text":"function : Disorder order x values. Rescale x value specific original quantiles. take porportion value traslate left keeppping original mean x. Finally add value associated y value substract complement group regression model term coefficients.","code":""},{"path":"/reference/sim_quasianscombe_set_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate quasi Anscombe data sets Type 4 — sim_quasianscombe_set_4","text":"","code":"df <- sim_quasianscombe_set_1()  dataset4 <- sim_quasianscombe_set_4(df)  dataset4 #> # A tibble: 100 × 2 #>        x     y #>    <dbl> <dbl> #>  1  3.88  3.90 #>  2  3.88  3.89 #>  3  3.92  4.14 #>  4  3.86  4.17 #>  5  3.94  4.23 #>  6  3.92  4.35 #>  7  3.87  4.26 #>  8  3.89  4.38 #>  9  3.93  4.44 #> 10  3.91  4.42 #> # … with 90 more rows  # plot(df)  plot(dataset4)   plot(sim_quasianscombe_set_4(df, rescale_to = c(0, .1), prop = 0.5))"}]
